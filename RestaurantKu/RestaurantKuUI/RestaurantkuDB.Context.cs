//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RestaurantKuUI
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RestaurantkuContext : DbContext
    {
        public RestaurantkuContext()
            : base("name=RestaurantkuContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<detailorder> detailorders { get; set; }
        public virtual DbSet<headorder> headorders { get; set; }
        public virtual DbSet<msemployee> msemployees { get; set; }
        public virtual DbSet<msmember> msmembers { get; set; }
        public virtual DbSet<msmenu> msmenus { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<spGetEmployeeData_All_Result> spGetEmployeeData_All()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetEmployeeData_All_Result>("spGetEmployeeData_All");
        }
    
        public virtual ObjectResult<spHeaderOrder_GetByDetailId_Result> spHeaderOrder_GetByDetailId(string orderId)
        {
            var orderIdParameter = orderId != null ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spHeaderOrder_GetByDetailId_Result>("spHeaderOrder_GetByDetailId", orderIdParameter);
        }
    
        public virtual ObjectResult<spMenu_GetByDetailId_Result> spMenu_GetByDetailId(Nullable<int> menuId)
        {
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMenu_GetByDetailId_Result>("spMenu_GetByDetailId", menuIdParameter);
        }
    
        public virtual ObjectResult<spMsEmployee_GetByHeaderOrder_Result> spMsEmployee_GetByHeaderOrder(string employeeId)
        {
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMsEmployee_GetByHeaderOrder_Result>("spMsEmployee_GetByHeaderOrder", employeeIdParameter);
        }
    
        public virtual int spMsEmployee_Insert(string employeeId, string employeeName, string employeeEmail, string employeePassword, string employeeHandphone, string employeePosition)
        {
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var employeeEmailParameter = employeeEmail != null ?
                new ObjectParameter("EmployeeEmail", employeeEmail) :
                new ObjectParameter("EmployeeEmail", typeof(string));
    
            var employeePasswordParameter = employeePassword != null ?
                new ObjectParameter("EmployeePassword", employeePassword) :
                new ObjectParameter("EmployeePassword", typeof(string));
    
            var employeeHandphoneParameter = employeeHandphone != null ?
                new ObjectParameter("EmployeeHandphone", employeeHandphone) :
                new ObjectParameter("EmployeeHandphone", typeof(string));
    
            var employeePositionParameter = employeePosition != null ?
                new ObjectParameter("EmployeePosition", employeePosition) :
                new ObjectParameter("EmployeePosition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMsEmployee_Insert", employeeIdParameter, employeeNameParameter, employeeEmailParameter, employeePasswordParameter, employeeHandphoneParameter, employeePositionParameter);
        }
    
        public virtual ObjectResult<spMsMember_getByOrderId_Result> spMsMember_getByOrderId(string memberId)
        {
            var memberIdParameter = memberId != null ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMsMember_getByOrderId_Result>("spMsMember_getByOrderId", memberIdParameter);
        }
    
        public virtual int spMsEmployee_Action(string employeeId, string employeeName, string employeeEmail, string employeePassword, string employeeHandphone, string employeePosition, string task)
        {
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var employeeEmailParameter = employeeEmail != null ?
                new ObjectParameter("EmployeeEmail", employeeEmail) :
                new ObjectParameter("EmployeeEmail", typeof(string));
    
            var employeePasswordParameter = employeePassword != null ?
                new ObjectParameter("EmployeePassword", employeePassword) :
                new ObjectParameter("EmployeePassword", typeof(string));
    
            var employeeHandphoneParameter = employeeHandphone != null ?
                new ObjectParameter("EmployeeHandphone", employeeHandphone) :
                new ObjectParameter("EmployeeHandphone", typeof(string));
    
            var employeePositionParameter = employeePosition != null ?
                new ObjectParameter("EmployeePosition", employeePosition) :
                new ObjectParameter("EmployeePosition", typeof(string));
    
            var taskParameter = task != null ?
                new ObjectParameter("Task", task) :
                new ObjectParameter("Task", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMsEmployee_Action", employeeIdParameter, employeeNameParameter, employeeEmailParameter, employeePasswordParameter, employeeHandphoneParameter, employeePositionParameter, taskParameter);
        }
    
        public virtual int spMsMember_Action(Nullable<int> memberId, string name, string email, string handPhone, Nullable<System.DateTime> joinDate, string password, string cCNumber, string bankName, string accNumber, string address, string deleted, string task)
        {
            var memberIdParameter = memberId.HasValue ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var handPhoneParameter = handPhone != null ?
                new ObjectParameter("HandPhone", handPhone) :
                new ObjectParameter("HandPhone", typeof(string));
    
            var joinDateParameter = joinDate.HasValue ?
                new ObjectParameter("JoinDate", joinDate) :
                new ObjectParameter("JoinDate", typeof(System.DateTime));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var cCNumberParameter = cCNumber != null ?
                new ObjectParameter("CCNumber", cCNumber) :
                new ObjectParameter("CCNumber", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var accNumberParameter = accNumber != null ?
                new ObjectParameter("AccNumber", accNumber) :
                new ObjectParameter("AccNumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var deletedParameter = deleted != null ?
                new ObjectParameter("deleted", deleted) :
                new ObjectParameter("deleted", typeof(string));
    
            var taskParameter = task != null ?
                new ObjectParameter("Task", task) :
                new ObjectParameter("Task", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMsMember_Action", memberIdParameter, nameParameter, emailParameter, handPhoneParameter, joinDateParameter, passwordParameter, cCNumberParameter, bankNameParameter, accNumberParameter, addressParameter, deletedParameter, taskParameter);
        }
    
        public virtual int spMsMenu_Action(Nullable<int> menuId, string name, Nullable<int> price, byte[] photo, string path, string task)
        {
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(byte[]));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var taskParameter = task != null ?
                new ObjectParameter("task", task) :
                new ObjectParameter("task", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMsMenu_Action", menuIdParameter, nameParameter, priceParameter, photoParameter, pathParameter, taskParameter);
        }
    }
}
